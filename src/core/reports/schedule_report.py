import datetime
import logging
from typing import List, Dict, Any, Optional

logger = logging.getLogger(__name__)


def generate_schedule_report(project: Dict[str, Any],
                             tasks: List[Dict[str, Any]],
                             result: Dict[str, Any],
                             employee_service=None) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ä–∞—Å—á–µ—Ç–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –ø–ª–∞–Ω–∞

    Args:
        project: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
        tasks: –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        result: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
        employee_service: –°–µ—Ä–≤–∏—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        str: –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
    """
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∑–∞–¥–∞—á –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    task_dict = {task['id']: task for task in tasks}

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    task_dates = result.get('task_dates', {})
    critical_path = result.get('critical_path', [])
    duration = result.get('duration', 0)

    # –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç
    report = "üìä –û–¢–ß–ï–¢ –ü–û –ö–ê–õ–ï–ù–î–ê–†–ù–û–ú–£ –ü–õ–ê–ù–£\n"
    report += "=============================================\n\n"

    # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
    report += "üìã –û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–ï–ö–¢–ï\n"
    report += f"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: '{project.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç')}'\n"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
    if task_dates:
        start_dates = [datetime.datetime.strptime(dates['start'], '%Y-%m-%d') for dates in task_dates.values()]
        end_dates = [datetime.datetime.strptime(dates['end'], '%Y-%m-%d') for dates in task_dates.values()]

        if start_dates and end_dates:
            project_start = min(start_dates)
            project_end = max(end_dates)
            project_duration = (project_end - project_start).days + 1

            report += f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: {project_duration} –¥–Ω–µ–π\n"
            report += f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {project_start.strftime('%d.%m.%Y')}\n"
            report += f"–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {project_end.strftime('%d.%m.%Y')}\n\n"
            report += f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á: {len(tasks)}\n\n"
    else:
        report += f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: {duration} –¥–Ω–µ–π\n\n"

    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å
    report += "üö© –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–£–¢–¨\n"
    report += "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–¥–∞—á, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞.\n"
    report += "–ó–∞–¥–µ—Ä–∂–∫–∞ –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∑–∞–¥–µ—Ä–∂–∫–µ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.\n\n"

    if critical_path:
        critical_tasks = []
        total_critical_days = 0

        for task_id in critical_path:
            task = next((t for t in tasks if t.get('id') == task_id), None)
            if not task:
                continue

            critical_tasks.append(task)
            total_critical_days += task.get('duration', 0)

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            start_date = "?"
            end_date = "?"

            if task_id in task_dates:
                start_date = datetime.datetime.strptime(task_dates[task_id]['start'], '%Y-%m-%d').strftime('%d.%m.%Y')
                end_date = datetime.datetime.strptime(task_dates[task_id]['end'], '%Y-%m-%d').strftime('%d.%m.%Y')

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ
            report += f"‚Ä¢ {task.get('name', f'–ó–∞–¥–∞—á–∞ {task_id}')} ({task.get('duration', 0)} –¥–Ω.)\n"
            report += f"  –î–∞—Ç—ã: {start_date} - {end_date}\n"

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
            if employee_service and 'employee_id' in task and task['employee_id']:
                try:
                    employee = employee_service.get_employee(task['employee_id'])
                    report += f"  –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {employee.name} ({employee.position})\n"
                except:
                    pass

            report += "\n"

        report += f"–î–ª–∏–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—Ç–∏: {total_critical_days} –¥–Ω–µ–π\n\n"
    else:
        report += "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
        report += "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏\n"
        report += "‚Ä¢ –í—Å–µ –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ\n\n"

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
    if employee_service:
        report += "üë• –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ó–ê–î–ê–ß\n"

        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
            employee_workload = {}

            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
            for task in tasks:
                if 'employee_id' in task and task['employee_id']:
                    employee_id = task['employee_id']

                    if employee_id not in employee_workload:
                        try:
                            employee = employee_service.get_employee(employee_id)
                            employee_workload[employee_id] = {
                                'name': employee.name,
                                'position': employee.position,
                                'tasks': []
                            }
                        except:
                            employee_workload[employee_id] = {
                                'name': f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {employee_id}",
                                'position': "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                                'tasks': []
                            }

                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
                    employee_workload[employee_id]['tasks'].append(task)

            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
            for employee_id, data in employee_workload.items():
                report += f"{data['name']} ({data['position']}):\n"

                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –¥–∞—Ç–∞–º
                sorted_tasks = data['tasks']
                if task_dates:
                    sorted_tasks = sorted(
                        data['tasks'],
                        key=lambda t: task_dates.get(t['id'], {}).get('start', '9999-12-31')
                        if t['id'] in task_dates else '9999-12-31'
                    )

                for task in sorted_tasks:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—ã –∑–∞–¥–∞—á–∏
                    start_date = "?"
                    end_date = "?"

                    if task['id'] in task_dates:
                        start_date = datetime.datetime.strptime(task_dates[task['id']]['start'], '%Y-%m-%d').strftime(
                            '%d.%m.%Y')
                        end_date = datetime.datetime.strptime(task_dates[task['id']]['end'], '%Y-%m-%d').strftime(
                            '%d.%m.%Y')

                    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ
                    report += f"  ‚Ä¢ {task.get('name', f'–ó–∞–¥–∞—á–∞ {task['id']}')} ({task.get('duration', 0)} –¥–Ω.)\n"
                    report += f"    –î–∞—Ç—ã: {start_date} - {end_date}\n"

                # –°—É–º–º–∞—Ä–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                total_load = sum(task.get('duration', 0) for task in data['tasks'])
                report += f"  –û–±—â–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞: {total_load} –¥–Ω–µ–π\n\n"
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–¥–∞—á: {str(e)}")
            report += "\n–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–¥–∞—á–∏.\n\n"

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    report += "\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò\n"
    report += "1. –û–±—Ä–∞—Ç–∏—Ç–µ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–∞–¥–∞—á–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—Ç–∏\n"
    report += "2. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É –º–µ–∂–¥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏\n"
    report += "3. –î–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Ä–æ–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏\n\n"

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    report += "=============================================\n"
    report += f"–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}\n"
    report += "–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"

    return report